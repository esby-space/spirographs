---
const pages = await Astro.glob("../pages/*.mdx");
const { chapter = null } = Astro.props;
---

<footer>
    <nav data-chapter={chapter}>
        <span id="previous" data-tooltip="Previous">&lt;</span>
        {
            pages
                .sort((a, b) => a.frontmatter.chapter - b.frontmatter.chapter)
                .map((page) => (
                    <a href={page.url + "/"} data-tooltip={page.frontmatter.title}>
                        {page.frontmatter.chapter}
                    </a>
                ))
        }
        <span id="next" data-tooltip="Next">&gt;</span>
    </nav>

    <p>
        This site was written and built by Nancy Chen and Sebastian Branch. See the source code <a
            href="https://github.com/esby-space/spirographs">here</a
        >. Share with us any thoughts!
    </p>
</footer>

<style>
    footer {
        margin-block: 4rem;
    }

    nav {
        display: flex;
        margin-block: 1rem;
        justify-content: space-evenly;
    }

    nav a,
    nav span {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 3rem;
        aspect-ratio: 1;
        border-radius: 50%;
        background-color: lightcoral;
        color: white;
        text-decoration: none;
        cursor: pointer;
        transition: all 0.2s;
    }

    [data-current] {
        font-weight: bold;
        cursor: default;
        background-color: tomato;
    }

    nav a:hover,
    nav span:hover {
        background-color: tomato;
    }

    p {
        color: grey;
        text-align: center;
    }
</style>

<script>
    const nav = document.querySelector("footer nav") as HTMLElement;
    const next = nav.querySelector("#next") as HTMLElement;
    const previous = nav.querySelector("#previous") as HTMLElement;

    if (nav.dataset.chapter) {
        const chapter = parseInt(nav.dataset.chapter);
        const element = nav.children.item(chapter + 1) as HTMLElement;
        element.dataset.current = "true";

        previous.onclick = () => (nav.children.item(chapter) as HTMLElement).click();
        next.onclick = () => (nav.children.item(chapter + 2) as HTMLElement).click();

        if (chapter == 0) previous.hidden = true;
        if (chapter == 6) next.hidden = true;
    }
</script>
